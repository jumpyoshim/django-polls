variables:
  CONTAINER_IMAGE_GCR: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_IMAGE_GCR .
    - docker push $CONTAINER_IMAGE_GCR

.test_template: &test_definition
  stage: test
  image: $CONTAINER_IMAGE_GCR
  before_script:
    - pipenv install --system --dev
    - cd mysite

unit-test:
  <<: *test_definition
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: custom_db
    POSTGRES_USER: custom_user
    POSTGRES_PASSWORD: custom_password
  script:
    - export DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
    - coverage run manage.py test
    - coverage report
    - coverage html
  artifacts:
    paths:
      - mysite/coverage

flake8:
  <<: *test_definition
  script:
    - flake8

radon:
  <<: *test_definition
  script:
    - radon cc -n C .
    - radon mi -n B .
